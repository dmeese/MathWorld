var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","document","documentuploader","documentscontroller","filesizevalidator","helper","mathcontentcontroller","mathcontenthelper","session","sessionscontroller","sessionshelper","stripify","user","userscontroller","usershelper","welcomecontroller","welcomehelper","authorized()","cache_dir()","check_validity!()","create()","create()","destroy()","destroy()","edit()","edit()","extension_white_list()","getuser()","help()","index()","index()","index()","login()","login()","logout()","new()","new()","new()","public()","remove_evil()","show()","show()","showsignin()","store_dir()","stripify()","student()","teacher()","update()","update()","validate_each()","readme_for_app"],"longSearchIndex":["applicationcontroller","applicationhelper","document","documentuploader","documentscontroller","filesizevalidator","filesizevalidator::helper","mathcontentcontroller","mathcontenthelper","session","sessionscontroller","sessionshelper","stripify","user","userscontroller","usershelper","welcomecontroller","welcomehelper","applicationhelper::authorized()","documentuploader#cache_dir()","filesizevalidator#check_validity!()","documentscontroller#create()","userscontroller#create()","documentscontroller#destroy()","userscontroller#destroy()","documentscontroller#edit()","userscontroller#edit()","documentuploader#extension_white_list()","applicationcontroller#getuser()","filesizevalidator#help()","documentscontroller#index()","userscontroller#index()","welcomecontroller#index()","sessionscontroller#login()","welcomecontroller#login()","sessionscontroller#logout()","documentscontroller#new()","filesizevalidator::new()","userscontroller#new()","mathcontentcontroller#public()","document#remove_evil()","documentscontroller#show()","userscontroller#show()","sessionscontroller#showsignin()","documentuploader#store_dir()","stripify::stripify()","mathcontentcontroller#student()","mathcontentcontroller#teacher()","documentscontroller#update()","userscontroller#update()","filesizevalidator#validate_each()",""],"info":[["ApplicationController","","ApplicationController.html","","<p>The ApplicationController class is the base class for all of the\ncontrollers for the MathWorld application. …\n"],["ApplicationHelper","","ApplicationHelper.html","",""],["Document","","Document.html","",""],["DocumentUploader","","DocumentUploader.html","","<p>We use the CarrierWave Uploader to allow easy uploading to the Amazon S3\nenviroment\n"],["DocumentsController","","DocumentsController.html","",""],["FileSizeValidator","","FileSizeValidator.html","","<p>lib/file_size_validator.rb Based on: gist.github.com/795665\n"],["FileSizeValidator::Helper","","FileSizeValidator/Helper.html","",""],["MathContentController","","MathContentController.html","",""],["MathContentHelper","","MathContentHelper.html","",""],["Session","","Session.html","","<p>Schema Information\n<p>Table name: sessions\n\n<pre>id         :integer          not null, primary key\nSessionID  :string(255) ...</pre>\n"],["SessionsController","","SessionsController.html","","<p>SessionsController handles login and logout, as that is tightly entwined \nwith session setup and teardown. …\n"],["SessionsHelper","","SessionsHelper.html","",""],["Stripify","","Stripify.html","","<p>Function to strip all special characters from the user_input.\n"],["User","","User.html","","<p>class User connects to the user records in the underlying database through\nRails’ ActiveRecord functionality …\n"],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["Authorized","ApplicationHelper","ApplicationHelper.html#method-c-Authorized","(user, function)","<p>Authorized returns true if the passed-in user is authorized for the\nparticular function false otherwise …\n"],["cache_dir","DocumentUploader","DocumentUploader.html#method-i-cache_dir","()","<p>Handles Heroku’s lack of filesystem\n"],["check_validity!","FileSizeValidator","FileSizeValidator.html#method-i-check_validity-21","()",""],["create","DocumentsController","DocumentsController.html#method-i-create","()","<p>POST /documents POST /documents.json\n"],["create","UsersController","UsersController.html#method-i-create","()",""],["destroy","DocumentsController","DocumentsController.html#method-i-destroy","()","<p>DELETE /documents/1 DELETE /documents/1.json\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()",""],["edit","DocumentsController","DocumentsController.html#method-i-edit","()","<p>GET /documents/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()",""],["extension_white_list","DocumentUploader","DocumentUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded. For images\nyou might use something like …\n"],["getUser","ApplicationController","ApplicationController.html#method-i-getUser","()","<p>session is defined by Rails for session storage. It’s session cookie based,\nso it goes away when the …\n"],["help","FileSizeValidator","FileSizeValidator.html#method-i-help","()",""],["index","DocumentsController","DocumentsController.html#method-i-index","()","<p>GET /documents GET /documents.json\n"],["index","UsersController","UsersController.html#method-i-index","()",""],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["login","SessionsController","SessionsController.html#method-i-login","()","<p>after entering login credentials, see if we can’t authenticate the user. if\nnot, present them a message …\n"],["login","WelcomeController","WelcomeController.html#method-i-login","()",""],["logout","SessionsController","SessionsController.html#method-i-logout","()","<p>Remove the user from the session and send them to the home page.\n"],["new","DocumentsController","DocumentsController.html#method-i-new","()","<p>GET /documents/new GET /documents/new.json\n"],["new","FileSizeValidator","FileSizeValidator.html#method-c-new","(options)",""],["new","UsersController","UsersController.html#method-i-new","()",""],["public","MathContentController","MathContentController.html#method-i-public","()","<p>This layout command checks a variable to determine if the teacher or the\nstudent layout should be presented. …\n"],["remove_evil","Document","Document.html#method-i-remove_evil","()",""],["show","DocumentsController","DocumentsController.html#method-i-show","()","<p>GET /documents/1 GET /documents/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()",""],["showsignin","SessionsController","SessionsController.html#method-i-showsignin","()","<p>showing the login page requires no special action; just allow the page to\nshow\n"],["store_dir","DocumentUploader","DocumentUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["stripify","Stripify","Stripify.html#method-c-stripify","(input_string)",""],["student","MathContentController","MathContentController.html#method-i-student","()",""],["teacher","MathContentController","MathContentController.html#method-i-teacher","()",""],["update","DocumentsController","DocumentsController.html#method-i-update","()","<p>PUT /documents/1 PUT /documents/1.json\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["validate_each","FileSizeValidator","FileSizeValidator.html#method-i-validate_each","(record, attribute, value)",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}